########################################################################################################################
# .bashrc_local
#   ログインシェル起動時: ~/.bash_profile -> ~/.bashrc -> ~/bashrc_local
#   対話的シェル起動時: ~/.bashrc -> ~/bashrc_local
#   ※bashrcはUbuntuが自動生成したものを変更せずに使いたいため、bashrcにbashrc_localを読む込むようにする
########################################################################################################################

########################################################################################################################
# ソフトウェア設定
########################################################################################################################
# starshilp
if command -v starship &> /dev/null; then eval "$(starship init bash)"; fi;

# zoxide
if command -v zoxide &> /dev/null; then eval "$(zoxide init bash)"; fi;
export _ZO_DATA_DIR="$HOME/.shared_cache/zoxide/"

# volta
export VOLTA_HOME="$HOME/.shared_cache/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
HISTCONTROL=erasedups # 重複したコマンドは保存しない
export FZF_DEFAULT_OPTS='--layout=reverse'

# golang
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/go/bin

# rust
if [ -f "$HOME/.cargo/env" ]; then . "$HOME/.cargo/env"; fi;

# tfenv
export PATH="$PATH:$HOME/.tfenv/bin"

# gh
export GH_CONFIG_DIR="$HOME/.shared_cache/gh"

# atcoder
. /opt/py_envs/bin/activate

########################################################################################################################
# alias
########################################################################################################################
alias lz="lazygit"
alias dt="git difftool --tool=vimdiff"
alias g="git"

########################################################################################################################
# カスタムコマンド
########################################################################################################################
# history検索(C-r)
function _history_search() {
    local regex_remove_numbers='s/^[[:space:]]*[0-9]\+[[:space:]]*//'
    local regex_remove_spaces='s/^[[:space:]]*//'
    local selected=$(history | sed -e $regex_remove_numbers -e $regex_remove_spaces | sort -u | fzf --query "$READLINE_LINE")
    if [[ -n "$selected" ]]; then
        READLINE_LINE="$selected"
        READLINE_POINT=${#selected}
    fi
}
bind -x '"\C-r": _history_search'

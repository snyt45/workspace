########################################################################################################################
# .bashrc_local
#   ログインシェル起動時: ~/.bash_profile -> ~/.bashrc -> ~/bashrc_local
#   対話的シェル起動時: ~/.bashrc -> ~/bashrc_local
#   ※bashrcはUbuntuが自動生成したものを変更せずに使いたいため、bashrcにbashrc_localを読む込むようにする
########################################################################################################################

########################################################################################################################
# ソフトウェア設定
########################################################################################################################
# starshilp
if command -v starship &> /dev/null; then eval "$(starship init bash)"; fi;

# zoxide
if command -v zoxide &> /dev/null; then eval "$(zoxide init bash)"; fi;
export _ZO_DATA_DIR="$HOME/.shared_cache/zoxide/"

# volta
export VOLTA_HOME="$HOME/.shared_cache/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# rbenv
if command -v rbenv &> /dev/null; then eval "$(rbenv init -)"; fi;
export RBENV_VERSION=3.1.2

# fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
HISTCONTROL=erasedups # 重複したコマンドは保存しない
export FZF_DEFAULT_OPTS='--layout=reverse'

# golang
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# rust
if [ -f "$HOME/.cargo/env" ]; then . "$HOME/.cargo/env"; fi;

# tfenv
export PATH="$PATH:$HOME/.tfenv/bin"

########################################################################################################################
# カスタムコマンド
########################################################################################################################
# history検索(C-r)
function _history_search() {
    local regex_remove_numbers='s/^[[:space:]]*[0-9]\+[[:space:]]*//'
    local regex_remove_spaces='s/^[[:space:]]*//'
    local selected=$(history | sed -e $regex_remove_numbers -e $regex_remove_spaces | sort -u | fzf --query "$READLINE_LINE")
    if [[ -n "$selected" ]]; then
        READLINE_LINE="$selected"
        READLINE_POINT=${#selected}
    fi
}
bind -x '"\C-r": _history_search'

# 選択したブランチに移動(gbc)
function gbc() {
    local regex_remove_spaces='s/.* //'
    local regex_remove_remote_origin='s#remotes/[^/]*/##'
    local branches=$(git branch --all | grep -v HEAD)
    local selected=$(echo "$branches" | fzf | sed -e "$regex_remove_spaces" -e "$regex_remove_remote_origin")
    if [[ -n "$selected" ]]; then
        git checkout $selected
    fi
}

# 選択したファイルをaddする(gadd)
function gadd() {
    local delta_cmd="delta --side-by-side --line-numbers -w ${FZF_PREVIEW_COLUMNS:-$COLUMNS}"
    local preview='
      status=$(echo {} | cut -c 1-2);
      file=$(echo {} | awk '\''{print $2}'\'');
      case $status in
        "A "*|"M "*)
          git diff --color --staged $file
          ;;
        " A"*|" M"*)
          git diff --color $file
          ;;
        "D "*)
          git diff --color --staged -- $file
          ;;
        " D"*)
          git diff --color -- $file
          ;;
        "??"*)
          git diff --color --no-index /dev/null $file
          ;;
      esac'
    git status -s |
    fzf -m --ansi \
        --header="Space: add or unstage, Enter: open vim, C-u: to page down, C-i: to page up" \
        --preview="$preview | $delta_cmd" \
        --preview-window=up,60% \
        --bind "space:execute-silent(echo {} | awk '{print \$2}' | xargs -I % sh -c 'git diff --name-only --cached % | grep -q % && git reset HEAD % || git add %')+reload(git status -s)" \
        --bind "enter:become(vim {2})" \
        --bind=ctrl-u:preview-down,ctrl-i:preview-up
}

# TODO: 途中
gl() {
  git log --color --pretty="%C(auto)%h%d %s %C(#C0C0C0)%C(bold)%cr" |
  fzf --ansi \
      --preview "echo {} | awk '{print \$1}' | git show --color=always | delta" \
      --bind "ctrl-c:execute-silent(echo {} | awk '{print \$1}' | clip -i)+abort"
}

########################################################################################################################
# alias
########################################################################################################################
alias lz="lazygit"
alias dt="git difftool --tool=vimdiff"
alias g="git"

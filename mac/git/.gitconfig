[user]
        name = yuta.sano
        email = snyt45@gmail.com
[core]
        editor = vim  # デフォルトエディタをVimに設定
[column]
        ui = auto  # ブランチ一覧等を列で表示
[branch]
        sort = -committerdate  # ブランチを最新コミット日時順でソート
[commit]
        verbose = true  # コミット時に変更内容を詳細表示
[diff]
        algorithm = histogram  # 高品質なdiffアルゴリズムを使用
[pager]
        diff = diff-so-fancy | less --tabs=4 -RFX  # diffを見やすく表示
        show = diff-so-fancy | less --tabs=4 -RFX  # git showも見やすく表示
[diff-so-fancy]
        stripLeadingSymbols = false  # +/-記号を表示
[rebase]
        autosquash = true  # fixup/squashコミットを自動的に並び替え
[alias]
        a = add
        ap = add --patch
        b = branch
        staged = diff --staged
        unstage = reset -q HEAD --
        discard = checkout --
        undo = "!git reset --soft HEAD~; git reset"
        bc = "!git branch -a | grep -v HEAD | fzf | sed -e 's/.* //' -e 's#remotes/[^/]*/##' | xargs git checkout"
        s = status
        ss = status -s
        l = log --pretty=format:"%C(yellow)%h%C(cyan)%x09%an%Creset%x09%C(magenta)%ar%x09%Creset%s" -20
        ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
        fixup = "!git log -n 50 --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs git commit --fixup"
        ls = "!f() { \
            hash=$(git l --color=always | \
                  fzf --ansi --preview 'echo {} | grep -o \"[0-9a-f]\\{7\\}\" | xargs git show --color=always' \
                  --preview-window=right:60%:wrap | \
                  grep -o \"[0-9a-f]\\{7\\}\"); \
            if [ -n \"$hash\" ]; then \
                git show $hash; \
            fi \
        }; f"
